def max_unique_subarray_sum(nums, k):
    n = len(nums)
    if n < k:
        return 0
    
    max_sum = 0
    current_sum = 0
    window_start = 0
    unique_elements = set()
    
    for window_end in range(n):
        while nums[window_end] in unique_elements:
            unique_elements.remove(nums[window_start])
            current_sum -= nums[window_start]
            window_start += 1
        
        unique_elements.add(nums[window_end])
        current_sum += nums[window_end]
        
        if window_end - window_start + 1 == k:
            max_sum = max(max_sum, current_sum)
            unique_elements.remove(nums[window_start])
            current_sum -= nums[window_start]
            window_start += 1
    
    return max_sum

if __name__ == "__main__":
    import sys
    input = sys.stdin.read().strip()
    input_lines = input.split()
    
    nums = list(map(int, input_lines[0].strip('[],').split(',')))
    k = int(input_lines[1])
    
    result = max_unique_subarray_sum(nums, k)
    print(result)
